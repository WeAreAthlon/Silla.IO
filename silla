#!/usr/bin/env php
<?php
/**
 * Silla.IO CLI Task Manager.
 *
 * @package    Silla.IO
 * @subpackage Core
 * @author     Kalin Stefanov <kalin@athlonsofia.com>
 * @copyright  Copyright (c) 2015, Silla.io
 * @license    http://opensource.org/licenses/GPL-3.0 GNU General Public License, version 3.0 (GPLv3)
 */

namespace Core;

use Core\CLI;

boot();

if ($argc > 1) {
    $parts   = explode(':', $argv[1]);
    $command = implode(':', array_slice($parts, 1));
    $class   = 'Core\CLI\\' . $parts[0];

    if('db' === $command) {
        $migrations = array_map(function ($item) {
            $name = substr($item, 0, -4);

            return array(
                'name' => $name,
                'version' => substr($name, -10)
            );
        }, array_slice(
            scandir(Config()->paths('root') . 'db' . DIRECTORY_SEPARATOR . 'migrations' . DIRECTORY_SEPARATOR),
            2
        ));

        usort($migrations, function ($a, $b) {
            return $a['version'] < $b['version'];
        });

        CLI\DB::$migrations = $migrations;
    }

    call_user_func_array(array($class, $command), array_slice($argv, 2));
}

function boot()
{
    $cwd = getcwd();

    while ($cwd !== DIRECTORY_SEPARATOR) {
        $file = implode(DIRECTORY_SEPARATOR, [$cwd, 'core', 'silla.php']);
        if (file_exists($file)) {
            require_once($file);

            try {
                Silla::boot();
                return true;
            } catch(\Exception $e) {
                echo "Not a Silla project\n";
                exit;
            }

        } else {
            $cwd = dirname($cwd);
        }
    }
}
